{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { CartState } from '../App';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Product = () => {\n  _s();\n\n  const params = useParams();\n  const id = params;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"gjghfdjgfj\"\n  }, void 0, false);\n};\n\n_s(Product, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n  return [useParams];\n});\n\n_c = Product;\nexport default Product;\n{\n  /* <Box >\n                 <i class=\"fa-solid fa-xmark\" style={{ fontSize: \"2rem\", position: \"fixed\", right: \"22%\", top: \"7vh\", cursor: \"pointer\" }} onClick={() => setOpenModal({ ...openModal, open: false })} />\n                 <div id='detail'>\n                     <div>\n                         <img src={openModal.val.strMealThumb} alt={openModal.val.strMeal} style={{ width: \"300px\" }} />\n                     </div>\n                     <div style={{ flex: \"2\", display: \"flex\", flexDirection: \"column\", justifyContent: \"space-evenly\" }}>\n                         <Typography sx={{ fontSize: \"2rem\", textAlign: \"start\" }}> {openModal.val.strMeal}</Typography>\n                         <Typography sx={{ fontSize: \"1.5rem\", textAlign: \"start\" }}> Price: ₹{openModal.val.price} <span className='wrongPrice'>{openModal.val.price + 50}</span> </Typography>\n                         <Typography>\n                             <div className='quantity'>\n                                 Quantity: {state.cart.some((p) => p.idMeal === openModal.val.idMeal) ? <> <i className=\"fa-solid fa-circle-plus\" onClick={() => {\n                                     dispatch({\n                                         type: \"increaseQTY\", payload: {\n                                             idMeal: openModal.val.idMeal,\n                                             qty: quan + 1\n                                         }\n                                     })\n                                 }} />\n                                     {state.cart.forEach((p) => { if (p.idMeal === openModal.val.idMeal) quan = p.qty })}\n                                     {quan !== null && quan}\n                                     <i className=\"fa-solid fa-circle-minus\" onClick={() => {\n                                         dispatch({\n                                             type: \"decreaseQTY\", payload: {\n                                                 idMeal: openModal.val.idMeal,\n                                                 qty: quan - 1\n                                             }\n                                         })\n                                     }} />\n                                 </> : 0}\n                             </div>\n                         </Typography>\n                         <Typography variant='h6'> Area: {openModal.val.strArea} </Typography>\n                         <Typography variant='h6'> Tags: {openModal.val.strTags} </Typography>\n                         {quan === 0 ? <button className='addtoCart' onClick={() => {\n                             dispatch({\n                                 type: \"addToCart\", payload: openModal.val\n                             })\n                             setOpenSnack({ open: true, html: `${openModal.val.strMeal} is added to cart`, severity: \"success\", time: \"800\" })\n                         }} > Add to Cart</button> : <button className='remove addtoCart' onClick={() => {\n                             dispatch({\n                                 type: \"removeFromCart\", payload: openModal.val\n                             })\n                             setOpenSnack({ open: true, html: `${openModal.val.strMeal} is removed from cart`, severity: \"success\", time: \"800\" })\n                         }}> Remove from Cart</button>}\n                         {openModal.val.strSource && <Typography element='div'><a href={openModal.val.strSource} target='blank' className=\"link\"> Know More</a> </Typography>}\n                     </div>\n                 </div>\n             </Box>\n             <Typography variant='p' style={{ lineHeight: \"1rem\" }}> {openModal.val.strInstructions}</Typography> */\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"names":["React","useParams","CartState","Product","params","id"],"sources":["/home/cedcoss/Desktop/Frontend Task/React JS/sweetshop/src/Components/Product.jsx"],"sourcesContent":["\nimport React from 'react'\nimport { useParams } from 'react-router-dom'\nimport { CartState } from '../App'\n\nconst Product = () => {\n    const params = useParams();\n    const id = params\n    return (\n        <>\n        gjghfdjgfj\n        </>\n    )\n}\n\nexport default Product\n\n\n{/* <Box >\n                <i class=\"fa-solid fa-xmark\" style={{ fontSize: \"2rem\", position: \"fixed\", right: \"22%\", top: \"7vh\", cursor: \"pointer\" }} onClick={() => setOpenModal({ ...openModal, open: false })} />\n                <div id='detail'>\n                    <div>\n                        <img src={openModal.val.strMealThumb} alt={openModal.val.strMeal} style={{ width: \"300px\" }} />\n                    </div>\n                    <div style={{ flex: \"2\", display: \"flex\", flexDirection: \"column\", justifyContent: \"space-evenly\" }}>\n                        <Typography sx={{ fontSize: \"2rem\", textAlign: \"start\" }}> {openModal.val.strMeal}</Typography>\n                        <Typography sx={{ fontSize: \"1.5rem\", textAlign: \"start\" }}> Price: ₹{openModal.val.price} <span className='wrongPrice'>{openModal.val.price + 50}</span> </Typography>\n                        <Typography>\n                            <div className='quantity'>\n                                Quantity: {state.cart.some((p) => p.idMeal === openModal.val.idMeal) ? <> <i className=\"fa-solid fa-circle-plus\" onClick={() => {\n                                    dispatch({\n                                        type: \"increaseQTY\", payload: {\n                                            idMeal: openModal.val.idMeal,\n                                            qty: quan + 1\n                                        }\n                                    })\n                                }} />\n                                    {state.cart.forEach((p) => { if (p.idMeal === openModal.val.idMeal) quan = p.qty })}\n                                    {quan !== null && quan}\n                                    <i className=\"fa-solid fa-circle-minus\" onClick={() => {\n                                        dispatch({\n                                            type: \"decreaseQTY\", payload: {\n                                                idMeal: openModal.val.idMeal,\n                                                qty: quan - 1\n                                            }\n                                        })\n                                    }} />\n                                </> : 0}\n                            </div>\n                        </Typography>\n                        <Typography variant='h6'> Area: {openModal.val.strArea} </Typography>\n                        <Typography variant='h6'> Tags: {openModal.val.strTags} </Typography>\n                        {quan === 0 ? <button className='addtoCart' onClick={() => {\n                            dispatch({\n                                type: \"addToCart\", payload: openModal.val\n                            })\n                            setOpenSnack({ open: true, html: `${openModal.val.strMeal} is added to cart`, severity: \"success\", time: \"800\" })\n                        }} > Add to Cart</button> : <button className='remove addtoCart' onClick={() => {\n                            dispatch({\n                                type: \"removeFromCart\", payload: openModal.val\n                            })\n                            setOpenSnack({ open: true, html: `${openModal.val.strMeal} is removed from cart`, severity: \"success\", time: \"800\" })\n                        }}> Remove from Cart</button>}\n                        {openModal.val.strSource && <Typography element='div'><a href={openModal.val.strSource} target='blank' className=\"link\"> Know More</a> </Typography>}\n                    </div>\n                </div>\n            </Box>\n            <Typography variant='p' style={{ lineHeight: \"1rem\" }}> {openModal.val.strInstructions}</Typography> */}\n"],"mappings":";;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,SAAT,QAA0B,QAA1B;;;;AAEA,MAAMC,OAAO,GAAG,MAAM;EAAA;;EAClB,MAAMC,MAAM,GAAGH,SAAS,EAAxB;EACA,MAAMI,EAAE,GAAGD,MAAX;EACA,oBACI;IAAA;EAAA,iBADJ;AAKH,CARD;;GAAMD,O;UACaF,S;;;KADbE,O;AAUN,eAAeA,OAAf;AAGA;EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAoH"},"metadata":{},"sourceType":"module"}